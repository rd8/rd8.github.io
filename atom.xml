<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[G.{O}]]></title>
  <link href="http://rd8.github.io/atom.xml" rel="self"/>
  <link href="http://rd8.github.io/"/>
  <updated>2014-07-18T13:50:49-05:00</updated>
  <id>http://rd8.github.io/</id>
  <author>
    <name><![CDATA[rd8]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cairo-dock in CentOS 7]]></title>
    <link href="http://rd8.github.io/blog/2014/07/18/cairo-dock-in-centos-7/"/>
    <updated>2014-07-18T12:37:36-05:00</updated>
    <id>http://rd8.github.io/blog/2014/07/18/cairo-dock-in-centos-7</id>
    <content type="html"><![CDATA[<p>There is some trick in compiling cairo-dock and cairo-dock-plugin in CentOS 7 using Cinnamon desktop manager.</p>

<p>Basically when I was following the instructions on glx-dock offical page, I have already had most of the dependencies installed. The compiling of cairo-dock has no problem, except a road-block met in compiling the plugin folder.</p>

<p>It asked me to install libgldi.so, which was in vain trying yum install.</p>

<p>Luckly, a post answered this question for installing cairo-dock on CentOS 6. And the trick is to execute the following commands:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span><span class="nb">export </span><span class="nv">PKG_CONFIG_PATH</span><span class="o">=</span>/usr/lib/pkgconfig:/usr/local/lib/pkgconfig
</span><span class="line"><span class="nv">$ </span>pkg-config gldi --variable<span class="o">=</span>pluginsdir
</span><span class="line">find /usr -name gldi.pc
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Well the last line was to confirm the file gldi.pc located at the corresponding path. After this, the Cairo-dock was installed smoothly. To set it auto start, add an item in program list at start-up: cairo-dock -o, which means using hardware acceleration OpenGL, and yy system has already enabled it.</p>

<p>With a screenshot to end this tip:</p>

<p><img class="center" src="http://rd8.github.io/images/posts/2014-07-18-cairo-dock.png" title="image" alt="images" /></p>

<p><a href="http://rd8.github.io/images/posts/2014-07-18-cairo-dock.png">Full size image</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rake New_post Automatically Opens Emacs for Editing]]></title>
    <link href="http://rd8.github.io/blog/2014/07/16/rake-new-post-automatically-opens-emacs-for-editing/"/>
    <updated>2014-07-16T03:21:43-05:00</updated>
    <id>http://rd8.github.io/blog/2014/07/16/rake-new-post-automatically-opens-emacs-for-editing</id>
    <content type="html"><![CDATA[<p>I am looking for some automattions in octopress posting and deploying. The first thing is to automatically input github credential; this seems no direct way but some cia Travis CI.</p>

<p>Another thing is to automatically open emacs for new post. Here is the solution:</p>

<p>http://www.andrewboni.com/2013/08/18/octopress-and-sublimetext2/</p>

<p>Basically just add one line in Rakefile, and it’s done.</p>

<p>The last thing would be automatically run rake generate and rake deploy when emacs saves the file. Not sure if emacs lisp fans have a ready answer for that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set VLC as Default Video Player in CentOS 7]]></title>
    <link href="http://rd8.github.io/blog/2014/07/15/set-vlc-as-default-video-player-in-centos-7/"/>
    <updated>2014-07-15T21:34:16-05:00</updated>
    <id>http://rd8.github.io/blog/2014/07/15/set-vlc-as-default-video-player-in-centos-7</id>
    <content type="html"><![CDATA[<p>It took a while to build VLC player from git source under new CentOS 7.</p>

<p>Theoretically you should only install those packages marked with el7, but some packages with el6 are only available for the time being, and they are needed in compiling other packages. Another thing is, even if you have installed an el7 version of some package, like aalib, when you do yum update, it asks you to update to its el6 version, which would definitely fail.</p>

<p>There are several repos helped me a bit with it:</p>

<ol>
  <li>base: mirrors.easynews.com</li>
  <li>epel: mirror.utexas.edu</li>
  <li>extras: mirror.anl.gov</li>
  <li>linuxtech-release: pkgrepo.linuxtech.net</li>
  <li>nux-dextop: mirror.li.nux.ro</li>
  <li>rpmforge: mirror.team-cymru.org</li>
  <li>rpmfusion-free-updates: mirror.nexcess.net</li>
  <li>updates: centosi3.centos.org</li>
</ol>

<p>It’s helpful to use yum whatprovides <lib file="" name=""> to check what packages provide a specified lib file. Most of the time, the dependencies are installed one by one. &#8211;skip-broken can help a bit in batch install, but it is still clearer to solve dependencies in steps.</lib></p>

<p>Ok, the short version of the long story is, VLC can be installed after ffmpeg and several other important packages have been installed in CentOS 7. And, the more important thing is, hardware acceleration can be enabled if you are using Intel Sandy Bridge CPU like i3, i5. Maybe another post would be good to address this, because it is the key to get better performance for a modern video player.</p>

<p>My recent but not last annoyance in VLC under CentOS 7 is, it is not shown in the list of applications when you click a video file.</p>

<p><img class="center" src="http://rd8.github.io/images/posts/2014-07-15-open-with-other-apps.png" /></p>

<p>It is not so easy to make VLC appear in this list, but I happened to find a dummy way to do this, and even better:</p>

<p><img class="center" src="http://rd8.github.io/images/posts/2014-07-15-set-vlc-as-default.png" /></p>

<p>This terminated my pain. Now VLC is the best video player in my CentOS box, kicking XBMC to be the choice only for LAN video playing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[String Permutation - Java]]></title>
    <link href="http://rd8.github.io/blog/2014/07/15/string-permutation-java/"/>
    <updated>2014-07-15T14:29:19-05:00</updated>
    <id>http://rd8.github.io/blog/2014/07/15/string-permutation-java</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Permutations</span> <span class="o">{</span>
</span><span class="line">
</span><span class="line">    <span class="c1">// print N! permutation of the characters of the string s (in order)</span>
</span><span class="line">    <span class="kd">public</span>  <span class="kd">static</span> <span class="kt">void</span> <span class="nf">perm1</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span> <span class="n">perm1</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">,</span> <span class="n">s</span><span class="o">);</span> <span class="o">}</span>
</span><span class="line">    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">perm1</span><span class="o">(</span><span class="n">String</span> <span class="n">prefix</span><span class="o">,</span> <span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">        <span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>
</span><span class="line">        <span class="k">if</span> <span class="o">(</span><span class="n">N</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">prefix</span><span class="o">);</span>
</span><span class="line">        <span class="k">else</span> <span class="o">{</span>
</span><span class="line">            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
</span><span class="line">               <span class="n">perm1</span><span class="o">(</span><span class="n">prefix</span> <span class="o">+</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">),</span> <span class="n">s</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">i</span><span class="o">)</span> <span class="o">+</span> <span class="n">s</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">N</span><span class="o">));</span>
</span><span class="line">        <span class="o">}</span>
</span><span class="line">
</span><span class="line">    <span class="o">}</span>
</span><span class="line">
</span><span class="line">    <span class="c1">// print N! permutation of the elements of array a (not in order)</span>
</span><span class="line">    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">perm2</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">       <span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>
</span><span class="line">       <span class="kt">char</span><span class="o">[]</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span><span class="o">[</span><span class="n">N</span><span class="o">];</span>
</span><span class="line">       <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
</span><span class="line">           <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class="line">       <span class="n">perm2</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">N</span><span class="o">);</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line">
</span><span class="line">    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">perm2</span><span class="o">(</span><span class="kt">char</span><span class="o">[]</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">        <span class="k">if</span> <span class="o">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
</span><span class="line">            <span class="k">return</span><span class="o">;</span>
</span><span class="line">        <span class="o">}</span>
</span><span class="line">        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class="line">            <span class="n">swap</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
</span><span class="line">            <span class="n">perm2</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
</span><span class="line">            <span class="n">swap</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
</span><span class="line">        <span class="o">}</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line">
</span><span class="line">    <span class="c1">// swap the characters at indices i and j</span>
</span><span class="line">    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">swap</span><span class="o">(</span><span class="kt">char</span><span class="o">[]</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">        <span class="kt">char</span> <span class="n">c</span><span class="o">;</span>
</span><span class="line">        <span class="n">c</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">];</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="n">j</span><span class="o">];</span> <span class="n">a</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">       <span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class="line">       <span class="n">String</span> <span class="n">alphabet</span> <span class="o">=</span> <span class="s">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><span class="o">;</span>
</span><span class="line">       <span class="n">String</span> <span class="n">elements</span> <span class="o">=</span> <span class="n">alphabet</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">N</span><span class="o">);</span>
</span><span class="line">       <span class="n">perm1</span><span class="o">(</span><span class="n">elements</span><span class="o">);</span>
</span><span class="line">       <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span><span class="line">       <span class="n">perm2</span><span class="o">(</span><span class="n">elements</span><span class="o">);</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Javascript Array Syntax</span><a href="http://j.mp/pPUUmW">MDN Documentation </a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="js"><span class="line"><span class="kd">var</span> <span class="nx">arr1</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">arrayLength</span><span class="p">);</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">arr2</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">element0</span><span class="p">,</span> <span class="nx">element1</span><span class="p">,</span> <span class="p">...,</span> <span class="nx">elementN</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Coffeescript Tricks start:51 mark:51,54-55 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="coffeescript"><span class="line"><span class="c1"># Given an alphabet:</span>
</span><span class="line"><span class="nv">alphabet = </span><span class="s">&#39;abcdefghijklmnopqrstuvwxyz&#39;</span>
</span><span class="line">
</span><span class="line"><span class="c1"># Iterate over part of the alphabet:</span>
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">letter</span> <span class="k">for</span> <span class="nx">letter</span> <span class="k">in</span> <span class="nx">alphabet</span><span class="p">[</span><span class="mi">4</span><span class="p">..</span><span class="mi">8</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
</feed>
